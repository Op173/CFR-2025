{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "5593d497-75f2-419c-99f3-6f2d841d1ebe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "18 14 5 18\n"
     ]
    }
   ],
   "source": [
    "def grocery_cost(num_apples, num_oranges):\n",
    "# Take in number of apples and oranges and return totoal cost of groceries\n",
    "    price_apples = 3\n",
    "    price_oranges = 2\n",
    "    cost_of_apples = num_apples * price_apples\n",
    "    cost_of_oranges = num_oranges * price_oranges\n",
    "    total_cost = cost_of_oranges + cost_of_apples\n",
    "    return total_cost\n",
    "    \n",
    "# How many purchased by team\n",
    "    \n",
    "Omar = grocery_cost(4, 3)\n",
    "Darius = grocery_cost(2,4)\n",
    "W = grocery_cost(1, 1)\n",
    "Belle = grocery_cost(2,6) \n",
    "print(Omar, Darius, W, Belle)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "618ae570-8b6e-48ad-ad22-4028bacace9b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Chris has to pay: 212\n",
      "Chris has to pay 212\n"
     ]
    }
   ],
   "source": [
    "# Task 1 - Define a function to calculate total cost\n",
    "def Orchard(price_of_strawberries, price_of_cherries, weight_of_strawberries, weight_of_cherries):\n",
    "    cost_of_strawberries = price_of_strawberries * weight_of_strawberries\n",
    "    cost_of_cherries = price_of_cherries * weight_of_cherries\n",
    "    total_cost = cost_of_strawberries + cost_of_cherries\n",
    "    return total_cost\n",
    "    \n",
    "# Task 2 - Use the function and calculate total payment\n",
    "# Prices\n",
    "\n",
    "price_of_cherries = 10\n",
    "price_of_strawberries = 7\n",
    "\n",
    "# Calculate for each person\n",
    "Gabby = Orchard(price_of_strawberries, price_of_cherries, 4, 3)\n",
    "Omar = Orchard(price_of_strawberries, price_of_cherries, 5, 3)\n",
    "Naeem = Orchard(price_of_strawberries, price_of_cherries, 7, 4)\n",
    "\n",
    "# Total Chris has to pay\n",
    "Chris_has_to_pay = Gabby + Omar + Naeem\n",
    "print(\"Chris has to pay:\", Chris_has_to_pay)\n",
    "\n",
    "# Cherry Grove orchard 2\n",
    "\n",
    "def Orchard2(price_of_strawberries, price_of_cherries, weight_of_strawberries, weight_of_cherries):\n",
    "    \n",
    "# Prices\n",
    "    price_of_cherries = 11\n",
    "    price_of_strawberries = 5\n",
    "\n",
    "# Calculate for each person\n",
    "    Belle = Orchard2(price_of_strawberries, price_of_cherries, 5, 7) \n",
    "    W = Orchard2(price_of_strawberries, price_of_cherries, 2, 2)\n",
    "\n",
    "# Total Chris has to pay\n",
    "    Chris_has_to_pay = Belle + W\n",
    "print(\"Chris has to pay\", Chris_has_to_pay)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "1298c7ef-bbca-4c22-a571-44eee293e381",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Chris has to pay at Orchard 1: 212\n",
      "Chris has to pay at Orchard 2: 134\n",
      "Total Chris has to pay at both orchards: 346\n"
     ]
    }
   ],
   "source": [
    "# Orchard 1\n",
    "def Orchard(price_of_strawberries, price_of_cherries, weight_of_strawberries, weight_of_cherries):\n",
    "    cost_of_strawberries = price_of_strawberries * weight_of_strawberries\n",
    "    cost_of_cherries = price_of_cherries * weight_of_cherries\n",
    "    total_cost = cost_of_strawberries + cost_of_cherries\n",
    "    return total_cost\n",
    "\n",
    "# Prices for Orchard 1\n",
    "price_of_cherries_1 = 10\n",
    "price_of_strawberries_1 = 7\n",
    "\n",
    "# Calculate cost for each person at Orchard 1\n",
    "Gabby = Orchard(price_of_strawberries_1, price_of_cherries_1, 4, 3)\n",
    "Omar = Orchard(price_of_strawberries_1, price_of_cherries_1, 5, 3)\n",
    "Naeem = Orchard(price_of_strawberries_1, price_of_cherries_1, 7, 4)\n",
    "\n",
    "# Total Chris pays at Orchard 1\n",
    "Chris_has_to_pay_1 = Gabby + Omar + Naeem\n",
    "print(\"Chris has to pay at Orchard 1:\", Chris_has_to_pay_1)\n",
    "\n",
    "# Orchard 2\n",
    "def Orchard2(price_of_strawberries, price_of_cherries, weight_of_strawberries, weight_of_cherries):\n",
    "    cost_of_strawberries = price_of_strawberries * weight_of_strawberries\n",
    "    cost_of_cherries = price_of_cherries * weight_of_cherries\n",
    "    total_cost = cost_of_strawberries + cost_of_cherries\n",
    "    return total_cost\n",
    "\n",
    "# Prices for Orchard 2\n",
    "price_of_cherries_2 = 11\n",
    "price_of_strawberries_2 = 5\n",
    "\n",
    "# Calculate cost for each person at Orchard 2\n",
    "Belle = Orchard2(price_of_strawberries_2, price_of_cherries_2, 5, 7)\n",
    "W = Orchard2(price_of_strawberries_2, price_of_cherries_2, 2, 2)\n",
    "\n",
    "# Total Chris pays at Orchard 2\n",
    "Chris_has_to_pay_2 = Belle + W\n",
    "print(\"Chris has to pay at Orchard 2:\", Chris_has_to_pay_2)\n",
    "\n",
    "# Grand Total (optional)\n",
    "grand_total = Chris_has_to_pay_1 + Chris_has_to_pay_2\n",
    "print(\"Total Chris has to pay at both orchards:\", grand_total)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5ab77d07-6a68-4e48-9463-b44091309e63",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
